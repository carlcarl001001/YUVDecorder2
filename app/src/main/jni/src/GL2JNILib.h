/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_demo_yuvdecorder_GL2JNILib */

#ifndef _Included_com_demo_yuvdecorder_GL2JNILib
#define _Included_com_demo_yuvdecorder_GL2JNILib
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_demo_yuvdecorder_GL2JNILib
 * Method:    init
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_demo_yuvdecorder_GL2JNILib_init
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_demo_yuvdecorder_GL2JNILib
 * Method:    drawTexture
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_demo_yuvdecorder_GL2JNILib_drawTexture
  (JNIEnv *, jclass);

/*
 * Class:     com_demo_yuvdecorder_GL2JNILib
 * Method:    stopDecorde
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_demo_yuvdecorder_GL2JNILib_stopDecorde
  (JNIEnv *, jclass);

/*
 * Class:     com_demo_yuvdecorder_GL2JNILib
 * Method:    pauseDecorde
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_demo_yuvdecorder_GL2JNILib_pauseDecorde
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     com_demo_yuvdecorder_GL2JNILib
 * Method:    decorde2Show
 * Signature: (Ljava/lang/String;Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_com_demo_yuvdecorder_GL2JNILib_decorde2Show
  (JNIEnv *, jclass, jstring, jobject);
jmethodID getJavaFuncID(JNIEnv * env,const char *classname,const char *function,const char *style);
/*
 * Class:     com_demo_yuvdecorder_GL2JNILib
 * Method:    yuv2Show
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_com_demo_yuvdecorder_GL2JNILib_yuv2Show
(JNIEnv *, jclass, jbyteArray,int32_t, int32_t,jobject);
//void delay(int x);
//void bindtexture(uchar *b);
//void draw(int width,int height,uchar *b);
int32_t InitSetup(int32_t width, int32_t height);
void InitializeTexture(int name, int id, int width, int height);
void SetupTextures(int32_t width, int32_t height);
void UpdateTextures(void* data, int32_t widht, int32_t height);
int32_t RenderTexture(void * data, int32_t widht, int32_t height);
GLuint createProgram(const char* pVertexSource,
                     const char* pFragmentSource);
void checkGlError(const char* op);
unsigned char *byteArrayToByte(JNIEnv* env, jbyteArray byteArray) ;
#ifdef __cplusplus
}
#endif
#endif
